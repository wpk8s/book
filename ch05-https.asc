[[ch05-https]]
HTTPS

HTTPS is mandatory today for a website. It can work without, but to have a
website, an online service online, serving visitors from everywhere, HTTPS
is mandatory to offer them a guarantee that data traveled between their
device and your website is encrypted and no middleman will be able to capture
sensitive personal data they might share with you.

I'll give you a basic example, related to common WordPress usage. You might
host online a popular local news website that allows visitors to comment on
the published articles. Your comment form is asking for a name and an email,
besides the comment body. The website is served without a secure certificate.
In the region, there's public WiFi access in all main areas, and most of
the local people have been connecting to this networks without too much
worries. Your website and the public WiFi is trusted by the local communities
of people. But recently, nobody knew, because of poor security of the WiFi
public network, a hacker managed to infiltrate some service, capturing all
insecure data traffic, between clients and the target service. In this case,
your website. So, the hacker is easily collecting all names, emails, easy
associated and sells them to some evil intended organization. What's even
worse, he can even rewrite parts of the responses, to change the truth of
some articles.

OK, it might sound a bit harsh the previous paragraph, but it is a totally
possible scenario, and even more critical can happen. We use WordPress to
create websites for medical centers, for kindergartens, news services, etc.
It is mandatory to make our website or service to use http://j.mp/3b8zE9D[HTTPS].

To make an example for this, I will prepare the following scenarios using
subdomains of a real domain I own, as this is the most common scenario I am
sure the readers of this book intend to use.

Before we dive in setting up secure servers, one thing to note is, this layer
of the service involves additional cpu usage, not too much if the traffic is
low on a website, but on a heavy traffic WooCommerce website, on a Black Friday
event, would be easier to measure how much it's affecting. So, we will cover
solutions starting from simple to advanced.

I will start with an opinionated implementation, that never failed me and offers
some extra benefits. This setup involves Cloudflare to provide to provide
public facing certificate for visitors and private certificate for communication
between Cloudflare network and our infrastructure. Other alternatives to Cloudflare
should provide identical result.

IMPORTANT: If you are going to use services like Cloudflare, I strongly recommend
you do read for any component used from it to research careful it's pricing
model. Cloudflare start from free, and can cover all essential needs of a
WordPress website, including DNS, DDOS protection, Cache, Firewall on the free
level offered, but each of them, and all the extra comes with small prices which
increases depending on different aspects.

image:images/cloudflare-full-strict.png[Ideal encryption using Cloudflare]

What we see in the screenshot above is the browser communicates securely with Cloudflare,
which communicates securely with our server. You should research for a deep dive
in the topic using http://j.mp/37jBl2P[their official support pages] at the moment
you want to understand the technical aspects of how it works. I will guide
you step by step how to implement this.

First, if you do not have a Cloudflare account, proceed and create one. The registration
does not involve any spending and it's a few minutes process. If you do not intend yet
to do it, it's fine, read along or feel free to jump to the alternative fully managing
on your own digital certificates, I will provide minimal security tips along the book
enough to help.

Cloudflare requires that the domain name will use them as DNS, so you will have to go
through their process of switching the DNS nameservers for your domain to them. The
process is easy, and will copy all current DNS records to make sure it will not break
any already setup email records, anti spam records and others you might already have.
Make sure to review all discovered records, and once you do transfer the nameservers,
there might be a few minutes to a few hours of waiting period to be fulfilled. Cloudflare
will offer you a status change if you recheck the page anytime you want.

Next, let's reuse all from previous chapter the setup of a virtual cloud server and
for MicroK8s, in case you have deleted the server. We need to continue working from
the step of creating a "recipe" for our website.
